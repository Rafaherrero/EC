$date
	Sun Nov  9 22:50:50 2014
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module alu_tb $end
$var wire 4 ! t_R [3:0] $end
$var wire 1 " t_c $end
$var wire 1 # t_s $end
$var wire 1 $ t_z $end
$var reg 4 % t_A [3:0] $end
$var reg 4 & t_B [3:0] $end
$var reg 1 ' t_L $end
$var reg 2 ( t_Op [1:0] $end
$scope module mat $end
$var wire 4 ) A [3:0] $end
$var wire 2 * ALUOp [1:0] $end
$var wire 4 + B [3:0] $end
$var wire 1 , Cin1 $end
$var wire 1 - Cin2 $end
$var wire 1 . Cin3 $end
$var wire 1 / L $end
$var wire 4 0 OP1 [3:0] $end
$var wire 4 1 OP2 [3:0] $end
$var wire 4 2 R [3:0] $end
$var wire 1 " carry $end
$var wire 1 3 cpl $end
$var wire 4 4 cpl_in [3:0] $end
$var wire 1 5 op1_A $end
$var wire 1 6 op1_B $end
$var wire 1 # sign $end
$var wire 1 $ zero $end
$scope module mux0 $end
$var wire 4 7 a [3:0] $end
$var wire 4 8 b [3:0] $end
$var wire 4 9 out [3:0] $end
$var wire 1 5 s $end
$upscope $end
$scope module mux1 $end
$var wire 4 : a [3:0] $end
$var wire 4 ; b [3:0] $end
$var wire 4 < out [3:0] $end
$var wire 1 6 s $end
$upscope $end
$scope module complementador $end
$var wire 4 = Ent [3:0] $end
$var wire 4 > Sal [3:0] $end
$var wire 1 3 cpl $end
$upscope $end
$scope module cal0 $end
$var wire 1 ? a $end
$var wire 1 @ b $end
$var wire 1 3 c_in $end
$var wire 1 , c_out $end
$var wire 1 A cl_output $end
$var wire 1 B fa_output $end
$var wire 1 / l $end
$var wire 1 C out $end
$var wire 2 D s [1:0] $end
$scope module cl0 $end
$var wire 1 ? a $end
$var wire 1 E a0o $end
$var wire 1 @ b $end
$var wire 1 F n0o $end
$var wire 1 G o0o $end
$var wire 1 A out $end
$var wire 2 H s [1:0] $end
$var wire 1 I x0o $end
$scope module multiplexor4_1 $end
$var wire 1 E a $end
$var wire 1 J a0o $end
$var wire 1 K a1o $end
$var wire 1 L a2o $end
$var wire 1 M a3o $end
$var wire 1 G b $end
$var wire 1 I c $end
$var wire 1 F d $end
$var wire 1 N n0o $end
$var wire 1 O n1o $end
$var wire 1 A out $end
$var wire 2 P s [1:0] $end
$upscope $end
$upscope $end
$scope module fa0 $end
$var wire 1 ? a $end
$var wire 1 Q a_and_b $end
$var wire 1 R a_xor_b $end
$var wire 1 @ b $end
$var wire 1 3 cin $end
$var wire 1 , cout $end
$var wire 1 B sum $end
$var wire 1 S z_and_c $end
$upscope $end
$scope module mux2_10 $end
$var wire 1 B a $end
$var wire 1 A b $end
$var wire 1 C out $end
$var wire 1 / s $end
$var wire 1 T s_n $end
$var wire 1 U sa $end
$var wire 1 V sb $end
$upscope $end
$upscope $end
$scope module cal1 $end
$var wire 1 W a $end
$var wire 1 X b $end
$var wire 1 , c_in $end
$var wire 1 - c_out $end
$var wire 1 Y cl_output $end
$var wire 1 Z fa_output $end
$var wire 1 / l $end
$var wire 1 [ out $end
$var wire 2 \ s [1:0] $end
$scope module cl0 $end
$var wire 1 W a $end
$var wire 1 ] a0o $end
$var wire 1 X b $end
$var wire 1 ^ n0o $end
$var wire 1 _ o0o $end
$var wire 1 Y out $end
$var wire 2 ` s [1:0] $end
$var wire 1 a x0o $end
$scope module multiplexor4_1 $end
$var wire 1 ] a $end
$var wire 1 b a0o $end
$var wire 1 c a1o $end
$var wire 1 d a2o $end
$var wire 1 e a3o $end
$var wire 1 _ b $end
$var wire 1 a c $end
$var wire 1 ^ d $end
$var wire 1 f n0o $end
$var wire 1 g n1o $end
$var wire 1 Y out $end
$var wire 2 h s [1:0] $end
$upscope $end
$upscope $end
$scope module fa0 $end
$var wire 1 W a $end
$var wire 1 i a_and_b $end
$var wire 1 j a_xor_b $end
$var wire 1 X b $end
$var wire 1 , cin $end
$var wire 1 - cout $end
$var wire 1 Z sum $end
$var wire 1 k z_and_c $end
$upscope $end
$scope module mux2_10 $end
$var wire 1 Z a $end
$var wire 1 Y b $end
$var wire 1 [ out $end
$var wire 1 / s $end
$var wire 1 l s_n $end
$var wire 1 m sa $end
$var wire 1 n sb $end
$upscope $end
$upscope $end
$scope module cal2 $end
$var wire 1 o a $end
$var wire 1 p b $end
$var wire 1 - c_in $end
$var wire 1 . c_out $end
$var wire 1 q cl_output $end
$var wire 1 r fa_output $end
$var wire 1 / l $end
$var wire 1 s out $end
$var wire 2 t s [1:0] $end
$scope module cl0 $end
$var wire 1 o a $end
$var wire 1 u a0o $end
$var wire 1 p b $end
$var wire 1 v n0o $end
$var wire 1 w o0o $end
$var wire 1 q out $end
$var wire 2 x s [1:0] $end
$var wire 1 y x0o $end
$scope module multiplexor4_1 $end
$var wire 1 u a $end
$var wire 1 z a0o $end
$var wire 1 { a1o $end
$var wire 1 | a2o $end
$var wire 1 } a3o $end
$var wire 1 w b $end
$var wire 1 y c $end
$var wire 1 v d $end
$var wire 1 ~ n0o $end
$var wire 1 !" n1o $end
$var wire 1 q out $end
$var wire 2 "" s [1:0] $end
$upscope $end
$upscope $end
$scope module fa0 $end
$var wire 1 o a $end
$var wire 1 #" a_and_b $end
$var wire 1 $" a_xor_b $end
$var wire 1 p b $end
$var wire 1 - cin $end
$var wire 1 . cout $end
$var wire 1 r sum $end
$var wire 1 %" z_and_c $end
$upscope $end
$scope module mux2_10 $end
$var wire 1 r a $end
$var wire 1 q b $end
$var wire 1 s out $end
$var wire 1 / s $end
$var wire 1 &" s_n $end
$var wire 1 '" sa $end
$var wire 1 (" sb $end
$upscope $end
$upscope $end
$scope module cal3 $end
$var wire 1 )" a $end
$var wire 1 *" b $end
$var wire 1 . c_in $end
$var wire 1 " c_out $end
$var wire 1 +" cl_output $end
$var wire 1 ," fa_output $end
$var wire 1 / l $end
$var wire 1 -" out $end
$var wire 2 ." s [1:0] $end
$scope module cl0 $end
$var wire 1 )" a $end
$var wire 1 /" a0o $end
$var wire 1 *" b $end
$var wire 1 0" n0o $end
$var wire 1 1" o0o $end
$var wire 1 +" out $end
$var wire 2 2" s [1:0] $end
$var wire 1 3" x0o $end
$scope module multiplexor4_1 $end
$var wire 1 /" a $end
$var wire 1 4" a0o $end
$var wire 1 5" a1o $end
$var wire 1 6" a2o $end
$var wire 1 7" a3o $end
$var wire 1 1" b $end
$var wire 1 3" c $end
$var wire 1 0" d $end
$var wire 1 8" n0o $end
$var wire 1 9" n1o $end
$var wire 1 +" out $end
$var wire 2 :" s [1:0] $end
$upscope $end
$upscope $end
$scope module fa0 $end
$var wire 1 )" a $end
$var wire 1 ;" a_and_b $end
$var wire 1 <" a_xor_b $end
$var wire 1 *" b $end
$var wire 1 . cin $end
$var wire 1 " cout $end
$var wire 1 ," sum $end
$var wire 1 =" z_and_c $end
$upscope $end
$scope module mux2_10 $end
$var wire 1 ," a $end
$var wire 1 +" b $end
$var wire 1 -" out $end
$var wire 1 / s $end
$var wire 1 >" s_n $end
$var wire 1 ?" sa $end
$var wire 1 @" sb $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0@"
1?"
1>"
0="
0<"
1;"
b0 :"
19"
18"
07"
06"
05"
14"
03"
b0 2"
11"
00"
1/"
b0 ."
1-"
1,"
1+"
1*"
1)"
0("
0'"
1&"
1%"
1$"
0#"
b0 ""
1!"
1~
0}
0|
0{
0z
1y
b0 x
1w
1v
0u
b0 t
0s
0r
0q
1p
0o
0n
0m
1l
0k
0j
1i
b0 h
1g
1f
0e
0d
0c
1b
0a
b0 `
1_
0^
1]
b0 \
0[
0Z
1Y
1X
1W
0V
0U
1T
0S
0R
0Q
b0 P
1O
1N
0M
0L
0K
0J
0I
b0 H
0G
1F
0E
b0 D
0C
0B
0A
0@
0?
b1110 >
b1110 =
b1110 <
b1110 ;
b1010 :
b1010 9
b1010 8
b0 7
16
15
b1110 4
03
b1000 2
b1110 1
b1010 0
0/
1.
1-
0,
b1110 +
b0 *
b1010 )
b0 (
0'
b1110 &
b1010 %
0$
1#
1"
b1000 !
$end
#2000
1$
0#
0-"
b0 !
b0 2
0+"
0?"
04"
0,"
1="
1"
0/"
13"
1<"
0;"
0*"
b110 1
b110 >
b110 4
b110 <
b110 =
b110 &
b110 +
b110 ;
#4000
0[
1k
0m
1A
1,
0#
1"
0Z
1-
1K
1S
1$
0-"
0s
0]
1a
1j
0i
1G
1I
1R
0C
b0 !
b0 2
0?"
0'"
1.
0X
1@
0U
0,"
1="
0r
1%"
0B
0/"
13"
1<"
0;"
1w
1y
1$"
13
0b
1q
1+"
0*"
1p
0N
0f
1c
0~
1{
08"
15"
b101 1
b101 >
b1010 4
b1010 <
b1010 =
b1 (
b1 *
b1 D
b1 H
b1 P
b1 \
b1 `
b1 h
b1 t
b1 x
b1 ""
b1 ."
b1 2"
b1 :"
b1010 &
b1010 +
b1010 ;
#6000
1[
1m
1Z
0"
0-
0s
17"
0="
1e
0k
1,
0'"
0.
0$
01"
03"
10"
0<"
0_
0a
1^
0j
0r
0%"
0C
b10 !
b10 2
0)"
0W
0w
0y
0$"
0U
1A
1Y
1+"
0p
0B
1S
05
0K
0c
0{
05"
b1 1
b1 >
0E
1I
1F
1R
0Q
0O
1M
0g
0!"
1}
09"
0?
b1110 4
b1110 <
b1110 =
b0 0
b0 9
b11 (
b11 *
b11 D
b11 H
b11 P
b11 \
b11 `
b11 h
b11 t
b11 x
b11 ""
b11 ."
b11 2"
b11 :"
b1110 &
b1110 +
b1110 ;
b1011 %
b1011 )
b1011 8
b1011 :
#8000
1#
1-"
0$
1?"
1,"
1.
0s
0[
b1000 !
b1000 2
1%"
0'"
0m
1-
0r
0Z
1k
1w
1y
1$"
1_
1a
1j
1p
1X
b111 1
b111 >
b1000 4
b1000 <
b1000 =
b1000 &
b1000 +
b1000 ;
#10000
0#
0-"
0?"
1s
0,"
1'"
0.
1[
b110 !
b110 2
1r
0%"
1m
0-
1Z
0k
0_
0a
0j
0X
b101 1
b101 >
b1010 4
b1010 <
b1010 =
b1010 &
b1010 +
b1010 ;
b1110 %
b1110 )
b1110 8
b1110 :
#12000
0s
b10 !
b10 2
0'"
0r
0w
0y
0$"
0p
b1 1
b1 >
b1110 4
b1110 <
b1110 =
b1110 &
b1110 +
b1110 ;
b1000 %
b1000 )
b1000 8
b1000 :
#14000
1r
0.
14"
1"
0%"
1/"
1;"
1w
1y
1$"
1a
1j
0G
0I
0R
1Z
0$
0,"
0b
0-
1*"
1p
0@
0,
0[
11"
03"
00"
0<"
0]
1_
0^
0i
0B
0S
0X
1)"
1W
1#
03
0A
0Y
0q
1+"
b1100 1
b1100 >
b1010 0
b1010 9
0C
0m
0s
1-"
b1000 !
b1000 2
1N
1O
0M
1f
1g
0e
1~
1!"
0}
18"
19"
07"
15
0T
0V
0l
0n
0&"
0("
0>"
1@"
b1100 4
b1100 <
b1100 =
1'
1/
b0 (
b0 *
b0 D
b0 H
b0 P
b0 \
b0 `
b0 h
b0 t
b0 x
b0 ""
b0 ."
b0 2"
b0 :"
b1100 &
b1100 +
b1100 ;
b1010 %
b1010 )
b1010 8
b1010 :
#16000
0#
0-"
1[
1s
b110 !
b110 2
0@"
1n
1("
0+"
1Y
1q
04"
0O
0g
1d
0!"
1|
09"
b10 (
b10 *
b10 D
b10 H
b10 P
b10 \
b10 `
b10 h
b10 t
b10 x
b10 ""
b10 ."
b10 2"
b10 :"
#18000
0[
1C
b101 !
b101 2
0n
1V
0Y
1A
0d
0|
0N
1M
0f
0~
1}
08"
b11 (
b11 *
b11 D
b11 H
b11 P
b11 \
b11 `
b11 h
b11 t
b11 x
b11 ""
b11 ."
b11 2"
b11 :"
#20000
